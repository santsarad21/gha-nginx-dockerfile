name: "CICD for Nginx Webapp using Dockerfile"
on:
    ## Trigger Github Workflow when commit made to main branch
  push:
    branches:
      - "main"
    tags:
      - 'v*'
    ## Don't run Github Workflow if changes made to under 'src' folder. 
    # paths-ignore:  
    #   - "src/*"
    ## Trigger Github Workflow when megre request made to main branch
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  nginx-image-build: 
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: checkout repository 
        uses: actions/checkout@v4
        with: 
          token: ${{secrets.USER_GITHUB_TOKEN}}
          fetch-depth: 0
      
      - name: Extract metedata for the Docker image 
        id: meta
        uses: docker/metadata-action@v5
        with:
          # context: workflow
          images: ${{ secrets.DOCKERHUB_USERNAME }}/gha-nginx-dockerfile
          # # flavor: |
          # #  latest=auto
          # #  prefix=true
          # #  suffix=true
          # tags: |
          #   type=match,pattern=v(.*),group=1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Image and Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          #tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.repository.name }}:latest
          # ##tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx-ubuntu:latest
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/gha-nginx-dockerfile:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'